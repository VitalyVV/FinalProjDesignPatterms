@startuml

title __SRC's Class Diagram__\n


      class application.Application {
          + Application()
          + run()
          - router()
      }




      class application.ApplicationContext {
          - commands : HashMap<String, Command>
          - in : BufferedReader
          {static} - instance : ApplicationContext
          - out : PrintWriter
          + getCommands()
          + getIn()
          {static} + getInstance()
          + getMediator()
          + getOut()
          + setIn()
          + setOut()
          + write()
          + writeln()
          ~ addCommand()
      }


  application.Application .up.|> java.lang.Runnable
  application.ApplicationContext o-- mediator.Mediator : taskMediator


      class tasks.Project {
          - name : String
          - taskList : ArrayList<Task>
          + Project()
          + addTask()
          + getName()
          + getTask()
          + getTasks()
          + removeTask()
      }

      class tasks.Task {
          - deadline : Calendar
          - description : String
          - done : boolean
          - id : long
          - subTasks : ArrayList<Task>
          + addTask()
          + getDeadline()
          + getDescription()
          + getId()
          + getSubTask()
          + getSubTasks()
          + isDone()
          + listTasks()
          + removeSubTask()
          + setDeadline()
          + setDone()
          ~ Task()
          - isToday()
      }

      class tasks.TaskAgency {
          - projects : HashMap<String, Project>
          + addDeadline()
          + addNewProject()
          + addNewSubTask()
          + addNewTask()
          + findTaskById()
          + getProject()
          + getProjects()
          + listTasks()
          + removeTask()
          + setTaskDone()
      }

      class tasks.TaskFactory {
          {static} - id : long
          {static} + createNewTask()
}

      interface mediator.Mediator {
          {abstract} + notify()
      }

      class mediator.TaskMediator {
          + addProject()
          + addSubTask()
          + addTask()
          + checkTask()
          + notify()
          + removeTask()
          + showTask()
          + showTodayDeadlines()
          + uncheckTask()
          - add()
          - notifyAgency()
          - notifyCommand()
      }


namespace commands{
      interface commands.Command {
          {abstract} + description()
          {abstract} + execute()
      }




      class commands.ErrorCommand {
          + description()
          + execute()
      }

      class commands.HelpCommand {
          + description()
          + execute()
      }

 namespace tasks{
        class commands.tasks.AddCommand {
            + description()
        }

        class commands.tasks.AddProjectCommand {
            + description()
        }


        class commands.tasks.AddTaskCommand {
            + description()
        }



        class commands.tasks.CheckCommand {
            + description()
        }


        class commands.tasks.DeadlineCommand {
            + description()
        }

        class commands.tasks.RemoveCommand {
            + description()
        }

        class commands.tasks.ShowCommand {
            + description()
        }

        abstract class commands.tasks.TaskCommand {
            + execute()
        }

        class commands.tasks.TodayCommand {
            + description()
        }

        class commands.tasks.UncheckCommand {
            + description()
        }
      }
 }

  commands.tasks.AddCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.AddProjectCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.AddTaskCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.CheckCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.DeadlineCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.RemoveCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.ShowCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.TaskCommand .up.|> commands.Command
  commands.tasks.TodayCommand -up-|> commands.tasks.TaskCommand
  commands.tasks.UncheckCommand -up-|> commands.tasks.TaskCommand


  commands.ErrorCommand .up.|> commands.Command
  commands.HelpCommand .up.|> commands.Command




  mediator.TaskMediator .up.|> mediator.Mediator
  mediator.TaskMediator o-- tasks.TaskAgency : taskAgency







right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
